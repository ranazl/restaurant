{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Desktop\\\\restaurant\\\\src\\\\pages\\\\Create\\\\Create.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Create.css';\nimport { useFetch } from '../../hooks/useFetch';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [method, setMethod] = useState('');\n  const [image, setImage] = useState(null); // Changed to handle file\n  const [imageUrl, setImageUrl] = useState(''); // For the uploaded image URL\n  const [cookingTime, setCookingTime] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [newIngredient, setNewIngredient] = useState('');\n  const navigate = useNavigate();\n  const {\n    postData,\n    data,\n    error\n  } = useFetch('http://localhost:3000/recipes', 'POST');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if (!imageUrl) {\n    //   alert('Please upload an image first.');\n    //   return;\n    // }\n    postData({\n      title,\n      ingredients,\n      method,\n      cookingTime: cookingTime + ' minutes',\n      image: imageUrl\n    });\n  };\n  useEffect(() => {\n    if (data) {\n      navigate('/');\n    }\n  }, [data, navigate]);\n  const handleAdd = e => {\n    e.preventDefault();\n    if (newIngredient && !ingredients.includes(newIngredient)) {\n      setIngredients(prev => [...prev, newIngredient]);\n    }\n    setNewIngredient('');\n  };\n  const handleImg = e => {\n    const selectedFile = e.target.files[0];\n    setImage(selectedFile);\n  };\n\n  // const uploadImage = async () => {\n  //   if (!image) {\n  //     alert('Please select an image to upload.');\n  //     return;\n  //   }\n\n  //   const formData = new FormData();\n  //   formData.append('image', image);\n\n  //   try {\n  //     const response = await axios.post('http://localhost:3000/upload', formData, {\n  //       headers: {\n  //         'Content-Type': 'multipart/form-data',\n  //       },\n  //     });\n  //     setImageUrl(response.data.imageUrl); // Assuming the server returns the image URL\n  //     alert('Image uploaded successfully.');\n  //   } catch (err) {\n  //     console.error('Image upload failed:', err);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Add a new Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formStyle\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImg,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Image uploaded: \", imageUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNewIngredient(e.target.value),\n            value: newIngredient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addBtn\",\n            onClick: handleAdd,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current ingredients: \", ingredients.map(i => /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [i, \", \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 57\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setMethod(e.target.value),\n          value: method,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe cookingTime:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setCookingTime(e.target.value),\n          value: cookingTime,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"bjQhdw2mZ4hQfRoYgXFx0DhfKKs=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useEffect","useState","useFetch","useNavigate","axios","jsxDEV","_jsxDEV","Create","_s","title","setTitle","method","setMethod","image","setImage","imageUrl","setImageUrl","cookingTime","setCookingTime","ingredients","setIngredients","newIngredient","setNewIngredient","navigate","postData","data","error","handleSubmit","e","preventDefault","handleAdd","includes","prev","handleImg","selectedFile","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","value","required","onClick","map","i","_c","$RefreshReg$"],"sources":["C:/Users/Rana/Desktop/restaurant/src/pages/Create/Create.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Create.css';\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function Create() {\r\n  const [title, setTitle] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [image, setImage] = useState(null); // Changed to handle file\r\n  const [imageUrl, setImageUrl] = useState(''); // For the uploaded image URL\r\n  const [cookingTime, setCookingTime] = useState('');\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredient, setNewIngredient] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const { postData, data, error } = useFetch('http://localhost:3000/recipes', 'POST');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (!imageUrl) {\r\n    //   alert('Please upload an image first.');\r\n    //   return;\r\n    // }\r\n    postData({ title, ingredients, method, cookingTime: cookingTime + ' minutes', image: imageUrl });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      navigate('/');\r\n    }\r\n  }, [data, navigate]);\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    if (newIngredient && !ingredients.includes(newIngredient)) {\r\n      setIngredients((prev) => [...prev, newIngredient]);\r\n    }\r\n    setNewIngredient('');\r\n  };\r\n\r\n  const handleImg = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setImage(selectedFile);\r\n  };\r\n\r\n  // const uploadImage = async () => {\r\n  //   if (!image) {\r\n  //     alert('Please select an image to upload.');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append('image', image);\r\n\r\n  //   try {\r\n  //     const response = await axios.post('http://localhost:3000/upload', formData, {\r\n  //       headers: {\r\n  //         'Content-Type': 'multipart/form-data',\r\n  //       },\r\n  //     });\r\n  //     setImageUrl(response.data.imageUrl); // Assuming the server returns the image URL\r\n  //     alert('Image uploaded successfully.');\r\n  //   } catch (err) {\r\n  //     console.error('Image upload failed:', err);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2 className=\"page-title\">Add a new Recipe</h2>\r\n      <form className=\"formStyle\" onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Recipe title:</span>\r\n          <input type=\"text\" onChange={(e) => setTitle(e.target.value)} value={title} required />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Add Image:</span>\r\n          <input type=\"file\" onChange={handleImg} required />\r\n          {/* <button type=\"button\" className=\"addBtn\" onClick={uploadImage}>\r\n            Upload Image\r\n          </button> */}\r\n        </label>\r\n        {imageUrl && <p>Image uploaded: {imageUrl}</p>}\r\n\r\n        <label>\r\n          <span>Recipe ingredients:</span>\r\n          <div className=\"ingredients\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n              value={newIngredient}\r\n            />\r\n            <button className=\"addBtn\" onClick={handleAdd}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </label>\r\n        <p>Current ingredients: {ingredients.map((i) => <em key={i}>{i}, </em>)}</p>\r\n\r\n        <label>\r\n          <span>Recipe method:</span>\r\n          <textarea onChange={(e) => setMethod(e.target.value)} value={method} required />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Recipe cookingTime:</span>\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => setCookingTime(e.target.value)}\r\n            value={cookingTime}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}