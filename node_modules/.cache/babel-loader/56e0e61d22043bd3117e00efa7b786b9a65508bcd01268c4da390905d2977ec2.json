{"ast":null,"code":"// import React from 'react';\n// import \"./Search.css\";\n// import { useLocation } from 'react-router-dom';\n// import { useFetch } from '../../hooks/useFetch';\n// import RecipeList from '../../components/RecipeList';\n\n// export default function Search() {\n\n//   const queryString = useLocation().search;\n//   const queryParams = new URLSearchParams(queryString);\n//   const query = queryParams.get('q');\n//   const url = 'http://localhost:3000/recipes?q=' + query\n//   const { error, isLoading, data } = useFetch(url)\n\n//   return (\n//     <div>\n//       <h2 className='page-title'>Recipes Including \"{query}\"</h2>\n//       {error && <p className='error'>{error}</p>}\n//       {isLoading && <p className='loading'>Loading...</p>}\n//       {data && <RecipeList Recipes={data} />}\n//       {console.log(data,\"dataaaaa\")}\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Rana/Desktop/restaurant/src/pages/Search/Search.js"],"sourcesContent":["// import React from 'react';\r\n// import \"./Search.css\";\r\n// import { useLocation } from 'react-router-dom';\r\n// import { useFetch } from '../../hooks/useFetch';\r\n// import RecipeList from '../../components/RecipeList';\r\n\r\n// export default function Search() {\r\n\r\n//   const queryString = useLocation().search;\r\n//   const queryParams = new URLSearchParams(queryString);\r\n//   const query = queryParams.get('q');\r\n//   const url = 'http://localhost:3000/recipes?q=' + query\r\n//   const { error, isLoading, data } = useFetch(url)\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 className='page-title'>Recipes Including \"{query}\"</h2>\r\n//       {error && <p className='error'>{error}</p>}\r\n//       {isLoading && <p className='loading'>Loading...</p>}\r\n//       {data && <RecipeList Recipes={data} />}\r\n//       {console.log(data,\"dataaaaa\")}\r\n//     </div>\r\n//   )\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}